version: '3'

tasks:

  compiler:run:
    desc: runs a pseudo-compiler with lexer and parser definitions
    cmds:
      - go build -o bin/main ./cmd/LexerGenerator/LexerGenerator.go {{.CLI_ARGS}}

  compiler:build:
    desc: Builds a pseudo-compiler with lexer and parser definitions
    cmds:
      - go build -o bin/compiler ./cmd/compiler/main.go {{.CLI_ARGS}}

  parser:generate:
    desc: Generates a parser.go file
    cmds:
      - go run ./cmd/parserGenerator/*.go {{.CLI_ARGS}}

  lex:run:
    desc: Run lexer executable
    cmds:
      - go run ./cmd/lexer/*.go {{.CLI_ARGS}}

  lex:generate:
    desc: Build Lexer executable
    cmds:
      - go run ./cmd/lexerGenerator/*.go {{.CLI_ARGS}}
  
  test:
    desc: Run tests, optionally filtering by pattern
    cmds:
      - |
        if [ -n "{{.PATTERN}}" ]; then
          go test -v -run "{{.PATTERN}}" ./...
        else
          go test -v ./...
        fi
    vars:
      PATTERN: "{{.PATTERN | default \"\"}}"